<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.DataMapper">
  <resultMap id="BaseResultMap" type="model.Data">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sensor_name" jdbcType="CHAR" property="sensor_name" />
    <result column="value" jdbcType="REAL" property="value" />
    <result column="address_id" jdbcType="INTEGER" property="address_id" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sensor_name, value, address_id, time, uuid
  </sql>
  <select id="selectByExample" parameterType="model.DataExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from data
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAllSensorCurrentData" parameterType="model.Data" resultMap="BaseResultMap">
    SELECT * from (SELECT * from data WHERE address_id = #{address_id} ORDER BY time DESC ) b GROUP BY sensor_name
  </select>
  <select id="selectOneSensorCurrentData" parameterType="model.Data" resultMap="BaseResultMap">
    SELECT * from data WHERE address_id=#{address_id} and sensor_name = #{sensor_name} ORDER BY time DESC LIMIT 1;
  </select>
  <select id="getOneAddressOneHistoryHighSensorInfo" parameterType="model.Data" resultMap="BaseResultMap">
    select id,sensor_name,max(value)as value,address_id,time,uuid from data where sensor_name=#{sensor_name}and address_id = #{address_id}
    GROUP BY date_format(time,"%Y-%e-%d") ORDER BY time DESC  LIMIT 10;
  </select>
  <select id="getOneAddressOneHistoryLowSensorInfo" parameterType="model.Data" resultMap="BaseResultMap">
    select id,sensor_name,min(value)as value,address_id,time,uuid from data where sensor_name=#{sensor_name}and address_id = #{address_id}
    GROUP BY date_format(time,"%Y-%e-%d") ORDER BY time DESC  LIMIT 10;
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from data
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="model.DataExample">
    delete from data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.Data">
    insert into data (id, sensor_name, value, 
      address_id, time, uuid
      )
    values (#{id,jdbcType=INTEGER}, #{sensor_name,jdbcType=CHAR}, #{value,jdbcType=REAL}, 
      #{address_id,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, #{uuid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="model.Data">
    insert into data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sensor_name != null">
        sensor_name,
      </if>
      <if test="value != null">
        value,
      </if>
      <if test="address_id != null">
        address_id,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="uuid != null">
        uuid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sensor_name != null">
        #{sensor_name,jdbcType=CHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=REAL},
      </if>
      <if test="address_id != null">
        #{address_id,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.DataExample" resultType="java.lang.Long">
    select count(*) from data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update data
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sensor_name != null">
        sensor_name = #{record.sensor_name,jdbcType=CHAR},
      </if>
      <if test="record.value != null">
        value = #{record.value,jdbcType=REAL},
      </if>
      <if test="record.address_id != null">
        address_id = #{record.address_id,jdbcType=INTEGER},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update data
    set id = #{record.id,jdbcType=INTEGER},
      sensor_name = #{record.sensor_name,jdbcType=CHAR},
      value = #{record.value,jdbcType=REAL},
      address_id = #{record.address_id,jdbcType=INTEGER},
      time = #{record.time,jdbcType=TIMESTAMP},
      uuid = #{record.uuid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.Data">
    update data
    <set>
      <if test="sensor_name != null">
        sensor_name = #{sensor_name,jdbcType=CHAR},
      </if>
      <if test="value != null">
        value = #{value,jdbcType=REAL},
      </if>
      <if test="address_id != null">
        address_id = #{address_id,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.Data">
    update data
    set sensor_name = #{sensor_name,jdbcType=CHAR},
      value = #{value,jdbcType=REAL},
      address_id = #{address_id,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      uuid = #{uuid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>